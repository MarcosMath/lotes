// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EstadoLote{
  DISPONIBLE
  ENPAGO
  PAGADO
}

enum FormaVenta{
  CONTADO
  CREDITO
}

enum TipoCuotaInicial{
  PORCENTAJE
  MONTO_FIJO
}


model Urbanizacion{
  @@map("urbanizaciones")
  id            Int       @id @default(autoincrement())
  nombre        String    @unique
  ubicacion     String?
  lotes         Lote[]
}

model Lote{
  @@map("lotes")
  id              Int       @id @default(autoincrement())
  manzano         String
  numero          Int
  nombre          String    //Campo calculado en app, concatenacion manzano-numero
  zona            String
  superficieM2    Float
  precioM2        Float
  precioContado   Float     //Campo calculado en app, superficieM2 * precioM2
  estado          EstadoLote @default(DISPONIBLE)
  formaVenta      FormaVenta?
  urbanizacionId  Int
  urbanizacion    Urbanizacion  @relation(fields: [urbanizacionId], references: [id])
  financiamientos FinanciamientoLote[]

  @@unique([manzano, numero, urbanizacionId], name: "unique_lote_por_urbanizacion")
}

model PlanFinanciamiento{
  @@map("planes_financiamiento")
  id                    Int                   @id @default(autoincrement())
  nombre                String                @unique
  porcentajeAnual       Float                 // % interés anual
  cantidadCuotas        Int                   // 12, 24, 36, etc.
  tipoCuotaInicial      TipoCuotaInicial      // PORCENTAJE o MONTO_FIJO
  valorCuotaInicial     Float                 // Si es PORCENTAJE: 20 (= 20%), si es MONTO_FIJO: 5000
  activo                Boolean               @default(true)
  financiamientos       FinanciamientoLote[]
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
}

model FinanciamientoLote{
  @@map("financiamientos_lote")
  id                    Int                   @id @default(autoincrement())
  loteId                Int
  lote                  Lote                  @relation(fields: [loteId], references: [id], onDelete: Cascade)
  planFinanciamientoId  Int
  planFinanciamiento    PlanFinanciamiento    @relation(fields: [planFinanciamientoId], references: [id])
  cuotaInicial          Float                 // Calculado según el tipo
  saldoFinanciar        Float                 // precioContado - cuotaInicial
  interesTotal          Float                 // Para transparencia
  cuotaMensual          Float                 // Calculado con la fórmula
  precioTotalCredito    Float                 // cuotaMensual * cantidadCuotas + cuotaInicial
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt

  @@unique([loteId, planFinanciamientoId], name: "unique_financiamiento_lote_plan")
}
